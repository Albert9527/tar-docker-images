name: Docker Image Pull and Tar Creation
env:
  K8s-VERSION: "v1.28.3"
  Cloud_orbiter: "2024-02-05"

on: [ workflow_dispatch ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Login to Docker
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
      - name: Pull Docker images of k8s-core-components
        run: |
          docker pull coredgeio/kube-controller-manager:${{ env.K8s-VERSION }}
          docker pull coredgeio/kube-scheduler:${{ env.K8s-VERSION }}
          docker pull coredgeio/kube-proxy:${{ env.K8s-VERSION }}
          docker pull coredgeio/kube-apiserver:${{ env.K8s-VERSION }}
          docker pull registry.k8s.io/coredns/coredns:v1.10.1
          docker pull coredgeio/pause:3.9
      # - name: Pull Docker images of k8s-core-components 
      #   run: |
      #     images=(
      #       "compass-api"
      #       "compass-cloud-manager"
      #       "compass-cluster-manager"
      #       "compass-controller"
      #       "compass-metric-server"
      #       "compass-orchestrator"
      #       "compass-term"
      #       "frontend"
      #       "kg-cluster-notifier"
      #       "kgapp"
      #     )
      
      #     for image in "${images[@]}"; do
      #       docker pull "coredgeio/$image:${{ env.Cloud_orbiter }}"
      #       docker pull "coredgeio/kg-keycloak:19.0.3-7"
      #       docker pull "coredgeio/minio:RELEASE.2019-12-17T23-16-33Z"
      #       docker pull "coredgeio/mongo:5.0.3"
      #       docker pull "coredgeio/workflow-controller"
      #       docker pull "coredgeio/workflowcli:14092021"
      #       docker pull "coredgeio/mysql:8.0"
      #       docker pull "coredgeio/postgres:9.5"
      #       docker pull "coredgeio/redis:6.2.5"
      #       docker pull "coredgeio/argoexec:latest"
      #     done
      
      # - name: Create tarball
      #   run: |
      #     docker save $(docker images --format "{{.Repository}}:{{.Tag}}" "coredgeio/*") | gzip > docker_images_${{ env.Cloud_orbiter }}.tar.gz


    
        
      - name: Create tarball
        run: |
          docker save registry.k8s.io/coredns/coredns:v1.10.1 coredgeio/pause:3.9 coredgeio/kube-controller-manager:${{ env.K8s-VERSION }} coredgeio/kube-proxy:${{ env.K8s-VERSION }} coredgeio/kube-scheduler:${{ env.K8s-VERSION }} coredgeio/kube-apiserver:${{ env.K8s-VERSION }} | gzip > docker_images_${{ env.K8s-VERSION }}.tar.gz

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: docker_images
          path: docker_images_${{ env.K8s-VERSION }}.tar.gz
